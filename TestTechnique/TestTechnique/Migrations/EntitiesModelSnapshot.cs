// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTechnique.Context;

#nullable disable

namespace TestTechnique.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class EntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestTechnique.Entities.Emploi", b =>
                {
                    b.Property<int>("EmploiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmploiID"), 1L, 1);

                    b.Property<string>("Entreprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonneEmploiID")
                        .HasColumnType("int");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmploiID");

                    b.ToTable("Emplois");
                });

            modelBuilder.Entity("TestTechnique.Entities.Personne", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonneId"), 1L, 1);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonneId");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("TestTechnique.Entities.PersonneEmploi", b =>
                {
                    b.Property<int>("PersonneEmploiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonneEmploiID"), 1L, 1);

                    b.Property<int>("EmploiID")
                        .HasColumnType("int");

                    b.Property<int?>("PersonneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateFin")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonneEmploiID");

                    b.HasIndex("EmploiID");

                    b.HasIndex("PersonneId");

                    b.ToTable("PersonneEmploi");
                });

            modelBuilder.Entity("TestTechnique.Entities.PersonneEmploi", b =>
                {
                    b.HasOne("TestTechnique.Entities.Emploi", null)
                        .WithMany("personneEmplois")
                        .HasForeignKey("EmploiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTechnique.Entities.Personne", null)
                        .WithMany("personneEmplois")
                        .HasForeignKey("PersonneId");
                });

            modelBuilder.Entity("TestTechnique.Entities.Emploi", b =>
                {
                    b.Navigation("personneEmplois");
                });

            modelBuilder.Entity("TestTechnique.Entities.Personne", b =>
                {
                    b.Navigation("personneEmplois");
                });
#pragma warning restore 612, 618
        }
    }
}
